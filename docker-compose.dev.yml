version: '3.7'
services:
  frontend-service:
    container_name: frontend-service
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:80"
    labels:
      NAME: "frontend-service"
    volumes:
      - .:/app
      - nodemodules:/app/node_modules
    networks:
      - net
    depends_on:
      - user-service
      - company-management-service
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
  
  #frontend:
  #  build:
  #    context: .
  #    dockerfile: Dockerfile.dev
  #  ports:
  #    - 8000:3000
  #  env_file: .env
  #  environment:
  #    - NODE_ENV=development
  #    - CHOKIDAR_USEPOLLING=true
  #  volumes: 
  #    - .:/app/
  #    - /app/node_modules
  #  networks: 
  #    - net

  redis:
    image: redis
    ports: 
      - "6379:6379"
    networks:
      - net

  # authentication service for the blackspace platform
  authentication-service:
    container_name: authentication-service #${AUTH_SERVICE_NAME}
    image: keratin/authn-server:latest
    ports:
      -  "8404:3000" # ${AUTHN_PORT}:3000
    environment:
      # development db urls should be of the following forms DATABASE_URL=mysql://root@db:3001 || 
      # DATABASE_URL=sqlite3://:memory:?mode=memory\&cache=shared #sqlite3://localhost/dev
      - AUTHN_URL=http://localhost:8404 #${AUTHN_PRIVATE_BASE_URL}:${AUTHN_PORT}
      - APP_DOMAINS=localhost #${AUTHN_AUDIENCE}
      - SECRET_KEY_BASE=test #${AUTHN_SECRET}
      - DATABASE_URL=postgresql://doadmin:oqshd3sto72yyhgq@test-do-user-6612421-0.a.db.ondigitalocean.com:25060/authentication-service-db?sslmode=require
      # TODO ensure production readiness
      - REDIS_URL=redis://redis:6379/11
      - HTTP_AUTH_USERNAME=blackspaceinc #${AUTHN_USERNAME}
      - HTTP_AUTH_PASSWORD=blackspaceinc #${AUTHN_PASSWORD}
      - PORT=8404
    depends_on:
      - redis
    networks:
      - net
  
  company-management-service:
    image: blackspaceinc/profile-management-service:dev
    container_name: company-management-service
    ports:
      - "9898:9898"
    restart: always
    networks:
      - net
  
  # user management service for the blackspace platform
  user-service:
    image: blackspaceinc/user-management-service:dev
    container_name: user-service
    ports:
      - "9100:9100"
    restart: always
    environment:
      - AUTHN_PORT=3000
    depends_on:
      - rabbitmq
      - zipkin
      - authentication-service
    networks:
      - net
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${AMQP_DEFAULT_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${AMQP_DEFAULT_PASSWORD:-guest}
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - 'rabbitmqstats_data:/rabbitmq'
    networks:
      - net
  
  storage:
    image: openzipkin/zipkin-mysql
    container_name: mysql
    # Uncomment to expose the storage port for testing
    ports:
      - 3306:3306

  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mysql
      # Point the zipkin at the storage backend
      - MYSQL_HOST=mysql
      # Uncomment to enable scribe
      - SCRIBE_ENABLED=true
      # Uncomment to enable self-tracing
      - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
      # Uncomment if you set SCRIBE_ENABLED=true
      - 9410:9410
    depends_on:
      - storage
    networks:
      - net
  
  # Adds a cron to process spans since midnight every hour, and all spans each day
  # This data is served by http://192.168.99.100:8080/dependency
  #
  # For more details, see https://github.com/openzipkin/docker-zipkin-dependencies
  dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=mysql
      # Add the baked-in username and password for the zipkin-mysql image
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
      # Uncomment to see dependency processing logs
      - ZIPKIN_LOG_LEVEL=DEBUG
      # Uncomment to adjust memory used by the dependencies job
      - JAVA_OPTS=-verbose:gc -Xms1G -Xmx1G
    depends_on:
      - storage
    networks:
      - net

networks:
  net:
    driver: bridge

volumes:
  rabbitmqstats_data: {}
  nodemodules: {}
